<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  ~ Copyright (C) 2011 Elihu, LLC. All rights reserved.
  ~
  ~ $Id$
  -->

<!-- $Id: build.xml 10397 2011-09-26 21:53:36Z archie $ -->
<project name="serverpush"
  default="all"
  basedir="."
  xmlns:ivy="urn:org.apache.ivy.ant"
  xmlns:dellroad="urn:org.dellroad.ant"
  xmlns:antcontrib="urn:net.sf.antcontrib">

    <!-- Timestamp -->
    <tstamp/>

    <!-- Define some properties -->
    <property name="base.name" value="${ant.project.name}"/>
    <property name="base.version" value="1.0.0"/>

    <!-- Import build macros -->
    <import file="src/build/macros.xml"/>

    <!-- Additional "clean" steps -->
    <target name="clean-project">
        <delete dir="src/config/sitebase/build"/>
        <delete dir="src/config/sitebase/dist"/>
    </target>

    <!-- PATH definitions -->
    <target name="build.classpath" unless="build.classpath.resolved">
        <dellroad:ivypath pathid="build.classpath" conf="build"/>
        <dellroad:ivyreport conf="build"/>
        <property name="build.classpath.resolved" value="true"/>
    </target>

    <target name="mkdirs" description="--> creates build structure" unless="mkdirs.completed">
        <mkdir dir="build/classes"/>
        <mkdir dir="build/resources"/>
        <mkdir dir="build/dist"/>
        <property name="mkdirs.completed" value="true"/>
    </target>

    <target name="javadoc" depends="javac.classpath" description="--> generates javadocs">
        <dellroad:javadoc>
            <links>
                <link href="http://download.oracle.com/javase/6/docs/api/"/>
                <link href="http://download.oracle.com/javaee/6/api/"/>
                <link href="http://www.slf4j.org/api/"/>
                <link href="http://google-web-toolkit.googlecode.com/svn/javadoc/latest/"/>
            </links>
        </dellroad:javadoc>
    </target>

    <target name="all" depends="dist"
      description="--> cleans project, checks for style violations, builds war file, generates all reports"/>

    <target name="dist" depends="clean, mkdirs, vaadin-dist"
      description="--> cleans project and builds WAR and RPM files"/>

    <target name="vaadin-dist" depends="mkdirs, javac"
      unless="vaadin-dist.completed" description="--> make Vaadin add-on archive">
        <antcontrib:outofdate>
            <sourcefiles>
                <fileset dir="." includes="build.xml"/>
                <fileset dir="src/ivy" includes="ivy.xml"/>
                <fileset dir="build/classes" includes="**/*"/>
            </sourcefiles>
            <targetfiles path="build/dist/${base.name}-${base.version}.zip"/>
            <sequential>

                <mkdir dir="build/libs"/>
                <dellroad:ivyput transitive="false" pattern="build/libs/[artifact]-[revision].[ext]" conf="atmosphere"/>

                <jar destfile="build/dist/${base.name}-${base.version}.jar" basedir="build/classes">
                    <manifest>
                        <attribute name="Build-User" value="${user.name}"/>
                        <attribute name="Build-Time" value="${TODAY} ${TSTAMP}"/>
                        <attribute name="Vaadin-Package-Version" value="1"/>
                        <attribute name="Implementation-Title" value="ServerPush"/>
                        <attribute name="Implementation-Version" value="${base.version}"/>
                        <attribute name="Vaadin-Widgetsets" value="org.vaadin.addons.serverpush.ServerPushWidgetset"/>
                        <attribute name="Vaadin-Addon" value="serverpush-${base.version}.jar"/>
                    </manifest>
                    <fileset dir="src/java" includes="**/*"/>
                </jar>

                <!-- Build zip file -->
                <jar destfile="build/dist/${base.name}-${base.version}.zip" basedir="build/libs">
                    <manifest>
                        <attribute name="Build-User" value="${user.name}"/>
                        <attribute name="Build-Time" value="${TODAY} ${TSTAMP}"/>
                        <attribute name="Vaadin-Package-Version" value="1"/>
                        <attribute name="Implementation-Title" value="ServerPush"/>
                        <attribute name="Implementation-Version" value="${base.version}"/>
                        <attribute name="Vaadin-Widgetsets" value="org.vaadin.addons.serverpush.ServerPushWidgetset"/>
                        <attribute name="Vaadin-Addon" value="serverpush-${base.version}.jar"/>
                    </manifest>
                    <fileset dir="build/dist">
                        <exclude name="*.zip"/>
                        <include name="${base.name}-${base.version}.jar"/>
                    </fileset>
                    <fileset dir="${basedir}" includes="web/**/*, README.txt"/>
                </jar>
            </sequential>
        </antcontrib:outofdate>
        <property name="vaadin-dist.completed" value="true"/>
    </target>

    <target name="javac-project" depends="build.classpath" unless="javac.completed">

        <!-- Main classes -->
        <antcontrib:if>
            <available file="src/java" type="dir"/>
            <antcontrib:then>
                <mkdir dir="build/classes"/>
                <antcontrib:outofdate>
                    <sourcefiles>
                        <fileset dir="." includes="build.xml"/>
                        <fileset dir="src/java">
                            <include name="**/*.java"/>
                            <exclude name="**/package-info.java"/>
                        </fileset>
                    </sourcefiles>
                    <mapper type="glob" dir="src/java" from="*.java" to="build/classes/*.class"/>
                    <sequential>
                        <mkdir dir="build/classes"/>
                        <dellroad:javac-default srcdir="src/java" destdir="build/classes">
                            <classpath refid="build.classpath"/>
                        </dellroad:javac-default>
                    </sequential>
                </antcontrib:outofdate>
            </antcontrib:then>
        </antcontrib:if>

    </target>

</project>
